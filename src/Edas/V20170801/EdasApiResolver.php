<?php

namespace AlibabaCloud\Edas\V20170801;

use AlibabaCloud\ApiResolverTrait;

/**
 * Resolve Api based on the method name.
 *
 * @method GetCluster getCluster(array $options = [])
 * @method QueryRegionConfig queryRegionConfig(array $options = [])
 * @method CsbListRegions csbListRegions(array $options = [])
 * @method CreateServerlessApplication createServerlessApplication(array $options = [])
 * @method BindServerlessSlb bindServerlessSlb(array $options = [])
 * @method DeleteServerlessApplication deleteServerlessApplication(array $options = [])
 * @method DeployServerlessApplication deployServerlessApplication(array $options = [])
 * @method GetServerlessAppConfigDetail getServerlessAppConfigDetail(array $options = [])
 * @method InsertServerlessApplication insertServerlessApplication(array $options = [])
 * @method ScaleServerlessApplication scaleServerlessApplication(array $options = [])
 * @method UnbindServerlessSlb unbindServerlessSlb(array $options = [])
 * @method InstallAgent installAgent(array $options = [])
 * @method ListComponents listComponents(array $options = [])
 * @method GetPackageStorageCredential getPackageStorageCredential(array $options = [])
 * @method ListEcsNotInCluster listEcsNotInCluster(array $options = [])
 * @method UpdateK8sSlb updateK8sSlb(array $options = [])
 * @method BindK8sSlb bindK8sSlb(array $options = [])
 * @method ListScalingRecords listScalingRecords(array $options = [])
 * @method UnbindK8sSlb unbindK8sSlb(array $options = [])
 * @method UpdateK8sApplicationConfig updateK8sApplicationConfig(array $options = [])
 * @method ImportK8sCluster importK8sCluster(array $options = [])
 * @method InsertK8sApplication insertK8sApplication(array $options = [])
 * @method DeployK8sApplication deployK8sApplication(array $options = [])
 * @method ScaleK8sApplication scaleK8sApplication(array $options = [])
 * @method DeleteK8sApplication deleteK8sApplication(array $options = [])
 * @method ListScalingRules listScalingRules(array $options = [])
 * @method InsertScalingRule insertScalingRule(array $options = [])
 * @method DeleteResourceGroup deleteResourceGroup(array $options = [])
 * @method InsertResourceGroup insertResourceGroup(array $options = [])
 * @method GetSecureToken getSecureToken(array $options = [])
 * @method TransformClusterMember transformClusterMember(array $options = [])
 * @method ListConvertableEcu listConvertableEcu(array $options = [])
 * @method InsertClusterMember insertClusterMember(array $options = [])
 * @method ListScaleOutEcu listScaleOutEcu(array $options = [])
 * @method ListEcuByRegion listEcuByRegion(array $options = [])
 * @method QueryMigrateEcuList queryMigrateEcuList(array $options = [])
 * @method QueryMigrateRegionList queryMigrateRegionList(array $options = [])
 * @method MigrateEcu migrateEcu(array $options = [])
 * @method MigrateToRegion migrateToRegion(array $options = [])
 * @method ListUserDefineRegion listUserDefineRegion(array $options = [])
 * @method ListAliyunRegion listAliyunRegion(array $options = [])
 * @method InsertOrUpdateRegion insertOrUpdateRegion(array $options = [])
 * @method DeleteUserDefineRegion deleteUserDefineRegion(array $options = [])
 * @method QueryMonitorInfo queryMonitorInfo(array $options = [])
 * @method ListVpc listVpc(array $options = [])
 * @method UpdateHealthCheckUrl updateHealthCheckUrl(array $options = [])
 * @method UpdateJvmConfiguration updateJvmConfiguration(array $options = [])
 * @method UpdateContainerConfiguration updateContainerConfiguration(array $options = [])
 * @method UpdateApplicationBaseInfo updateApplicationBaseInfo(array $options = [])
 * @method GetContainerConfiguration getContainerConfiguration(array $options = [])
 * @method GetJvmConfiguration getJvmConfiguration(array $options = [])
 * @method InsertDeployGroup insertDeployGroup(array $options = [])
 * @method GetApplication getApplication(array $options = [])
 * @method DeleteDeployGroup deleteDeployGroup(array $options = [])
 * @method QueryApplicationStatus queryApplicationStatus(array $options = [])
 * @method SynchronizeResource synchronizeResource(array $options = [])
 * @method ListRecentChangeOrder listRecentChangeOrder(array $options = [])
 * @method DeleteEcu deleteEcu(array $options = [])
 * @method ListSlb listSlb(array $options = [])
 * @method ListHistoryDeployVersion listHistoryDeployVersion(array $options = [])
 * @method ListResourceGroup listResourceGroup(array $options = [])
 * @method UpdateAccountInfo updateAccountInfo(array $options = [])
 * @method UpdateRole updateRole(array $options = [])
 * @method UnbindSlb unbindSlb(array $options = [])
 * @method UnbindSubAccount unbindSubAccount(array $options = [])
 * @method ListRole listRole(array $options = [])
 * @method ListSubAccount listSubAccount(array $options = [])
 * @method ListClusterMembers listClusterMembers(array $options = [])
 * @method ListAuthority listAuthority(array $options = [])
 * @method InsertCluster insertCluster(array $options = [])
 * @method InsertRole insertRole(array $options = [])
 * @method EnableDegradeControl enableDegradeControl(array $options = [])
 * @method DeleteClusterMember deleteClusterMember(array $options = [])
 * @method DeleteRole deleteRole(array $options = [])
 * @method AuthorizeRole authorizeRole(array $options = [])
 * @method BindSlb bindSlb(array $options = [])
 * @method BindSubAccount bindSubAccount(array $options = [])
 * @method DeleteCluster deleteCluster(array $options = [])
 * @method AuthorizeApplication authorizeApplication(array $options = [])
 * @method AuthorizeResourceGroup authorizeResourceGroup(array $options = [])
 * @method GetChangeOrderInfo getChangeOrderInfo(array $options = [])
 * @method ListCluster listCluster(array $options = [])
 * @method DeleteApplication deleteApplication(array $options = [])
 * @method RollbackApplication rollbackApplication(array $options = [])
 * @method ScaleInApplication scaleInApplication(array $options = [])
 * @method ScaleOutApplication scaleOutApplication(array $options = [])
 * @method StartApplication startApplication(array $options = [])
 * @method StopApplication stopApplication(array $options = [])
 * @method ResetApplication resetApplication(array $options = [])
 * @method InsertApplication insertApplication(array $options = [])
 * @method ChangeApplicationGroup changeApplicationGroup(array $options = [])
 * @method DeployApplication deployApplication(array $options = [])
 * @method UpdateContainer updateContainer(array $options = [])
 * @method ListApplicationEcu listApplicationEcu(array $options = [])
 * @method ListBuildPack listBuildPack(array $options = [])
 * @method ListDeployGroup listDeployGroup(array $options = [])
 * @method QueryConfigCenter queryConfigCenter(array $options = [])
 * @method UpdateDegradeControl updateDegradeControl(array $options = [])
 * @method UpdateFlowControl updateFlowControl(array $options = [])
 * @method ListFlowControls listFlowControls(array $options = [])
 * @method ListPublishedServices listPublishedServices(array $options = [])
 * @method ListServiceGroups listServiceGroups(array $options = [])
 * @method InsertFlowControl insertFlowControl(array $options = [])
 * @method InsertServiceGroup insertServiceGroup(array $options = [])
 * @method ListConfigCenters listConfigCenters(array $options = [])
 * @method ListConsumedServices listConsumedServices(array $options = [])
 * @method ListDegradeControls listDegradeControls(array $options = [])
 * @method DisableDegradeControl disableDegradeControl(array $options = [])
 * @method DisableFlowControl disableFlowControl(array $options = [])
 * @method EnableFlowControl enableFlowControl(array $options = [])
 * @method InsertConfigCenter insertConfigCenter(array $options = [])
 * @method InsertDegradeControl insertDegradeControl(array $options = [])
 * @method DeleteConfigCenter deleteConfigCenter(array $options = [])
 * @method DeleteDegradeControl deleteDegradeControl(array $options = [])
 * @method DeleteFlowControl deleteFlowControl(array $options = [])
 * @method DeleteServiceGroup deleteServiceGroup(array $options = [])
 * @method ListApplication listApplication(array $options = [])
 */
class EdasApiResolver
{
    use ApiResolverTrait;
}
